{"version":3,"sources":["components/PokemonThumb.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonThumb","id","image","name","type","style","_callback","className","src","alt","App","useState","allPokemons","setAllPokemons","loadMore","setLoadMore","getAllPokemons","createPokemonObject","a","results","forEach","pokemon","fetch","res","json","data","currentList","sort","b","next","useEffect","map","index","sprites","other","dream_world","front_default","types","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAgBeA,EAdM,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,KAC9BC,GADoD,EAAhBC,UAC5BF,EAAO,oBACrB,OACI,sBAAKG,UAAWF,EAAhB,UACI,qBAAKE,UAAU,SAAf,SAAwB,uCAAUN,OAClC,qBAAKO,IAAKN,EAAOO,IAAKN,IACtB,sBAAKI,UAAU,iBAAf,UACI,6BAAKJ,IACL,2CAAcC,YC0CfM,EAjDH,WAET,MAAqCC,mBAAS,IAA9C,mBAAMC,EAAN,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,8CAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEKC,EAAc,uCAAG,qBAMZC,EANY,SAAAC,EAAA,6DAMZD,EANY,SAMQE,GAC3BA,EAAQC,QAAR,uCAAiB,WAAMC,GAAN,iBAAAH,EAAA,sEACGI,MAAM,qCAAD,OAAsCD,EAAQlB,OADtD,cACToB,EADS,gBAEKA,EAAIC,OAFT,cAETC,EAFS,OAGfZ,GAAgB,SAAAa,GAAW,4BAAQA,GAAR,CAAqBD,OAHjC,SAITb,EAAYe,MAAK,SAACT,EAAGU,GAAJ,OAAUV,EAAEjB,GAAK2B,EAAE3B,MAJ3B,2CAAjB,wDAPmB,SACHqB,MAAMR,GADH,cACfS,EADe,gBAEFA,EAAIC,OAFF,OAEfC,EAFe,OAIrBV,EAAYU,EAAKI,MAUjBZ,EAAoBQ,EAAKN,SAdJ,2CAAH,qDAqBpB,OAJDW,qBAAU,WACTd,MACE,IAGA,sBAAKT,UAAU,eAAf,UACE,mDACA,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,gBAAf,SACGK,EACAe,MAAK,SAACT,EAAGU,GAAJ,OAAUV,EAAEjB,GAAK2B,EAAE3B,GAAI,GAAK,KACjC8B,KAAI,SAACV,EAASW,GAAV,OACH,cAAC,EAAD,CACE/B,GAAIoB,EAAQpB,GACZE,KAAMkB,EAAQlB,KACdD,MAAOmB,EAAQY,QAAQC,MAAMC,YAAYC,cACzChC,KAAMiB,EAAQgB,MAAM,GAAGjC,KAAKD,MACvB6B,QAIT,wBAAQzB,UAAU,YAAY+B,QAAS,kBAAMtB,KAA7C,8BClCKuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.34f44076.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PokemonThumb = ({id, image, name, type, _callback }) => {\r\n    const style = type + \" thumb-container\";\r\n    return (\r\n        <div className={style}>\r\n            <div className=\"number\"><small>#0{id}</small></div>\r\n            <img src={image} alt={name} />\r\n            <div className=\"detail-wrapper\">\r\n                <h3>{name}</h3>\r\n                <small>Type: {type}</small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonThumb","import React, { useEffect, useState } from 'react'\nimport PokemonThumb from './components/PokemonThumb'\n\nconst App = () => {\n\n   const[allPokemons, setAllPokemons] = useState([])\n   const [loadMore, setLoadMore] = useState('https://pokeapi.co/api/v2/pokemon?limit=18')\n\n  const getAllPokemons = async () => {\n    const res = await fetch(loadMore)\n    const data = await res.json()\n\n    setLoadMore(data.next)\n\n    function createPokemonObject(results)  {\n      results.forEach( async pokemon => {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\n        const data =  await res.json()\n        setAllPokemons( currentList => [...currentList, data])\n        await allPokemons.sort((a, b) => a.id - b.id)\n      })\n    }\n    createPokemonObject(data.results)\n  }\n\n useEffect(() => {\n  getAllPokemons()\n }, [])\n\n  return (\n    <div className=\"app-contaner\">\n      <h1>POKEMON EVOLUTION</h1>\n      <div className=\"pokemon-container\">\n        <div className=\"all-container\">\n          {allPokemons\n          .sort((a, b) => a.id > b.id? 1 : -1)\n          .map((pokemon, index) =>\n            <PokemonThumb\n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.sprites.other.dream_world.front_default}\n              type={pokemon.types[0].type.name}\n              key={index}\n            />\n          )}\n        </div>\n          <button className=\"load-more\" onClick={() => getAllPokemons()}>LOAD MORE</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}